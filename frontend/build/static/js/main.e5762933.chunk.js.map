{"version":3,"sources":["core/buzzword_grammar.ts","core/header_grammar.js","atoms/button/IconButton.tsx","atoms/header/Header.tsx","atoms/paragraph/BuzzwordParagraph.tsx","molecules/BuzzwordHero.tsx","core/hooks/grammar/GrammarHooks.ts","pages/Buzzword-Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["buzzword_grammar","header_grammar","IconButton","props","onClick","type","className","class","iconClass","Header","id","value","BuzzwordParagraph","BuzzwordHero","headerText","introText","paragraphText","fixINGModifier","text","replace","BuzzwordPage","grammar","getNewGrammar","useCallback","grammarConfiguration","origin","tracery","createGrammar","addModifiers","baseEngModifiers","flatten","useState","header","buzzword","setBuzzword","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"oOAAaA,EAAmB,CAC9B,OAAU,aACV,SAAa,CACX,uFACA,kIACA,uFACE,sFAEJ,OAAU,CACR,GACA,MACA,MAEF,UAAa,CACX,cACA,YACA,WACA,UAEF,YAAe,CACb,WACA,eACA,YACA,YACA,mBACA,aACA,WACA,eACA,aACA,iBACA,WACA,YACA,UACA,cACA,aACA,cACA,gBACA,aACA,UACA,aACA,mBACA,YACA,YACA,UACA,cACA,aACA,gBACA,SACA,aACA,cAEF,SAAY,CACV,WACA,QACA,QACA,SACA,SACA,QACA,UACA,UACA,UACA,aACA,SACA,UAEF,SAAY,CACV,kBACA,mBACA,YACA,MACA,eACA,eACA,UACA,eACA,eACA,YACA,uBACA,kBACA,gBACA,iBACA,kBACA,iBACA,WACA,cACA,kBACA,cACA,aACA,sBACA,MACA,YACA,kBACA,YACA,wBACA,eACA,4BACA,iBACA,YACA,yBAEA,kBAAmB,CACf,oBACA,oBACA,aACA,OACA,iBACA,gBACA,WACA,iBACA,gBACA,YACA,wBACA,mBACA,iBACA,kBACA,mBACA,kBACA,YACA,eACA,mBACA,gBACA,cACA,uBACA,OACA,aACA,mBACA,aACA,yBACA,gBACA,6BACA,kBACA,aACA,2BCnIKC,EAAiB,CAC5B,OAAU,aACV,SAAa,CACX,oEAEF,OAAU,CACR,GACA,MACA,MAEF,UAAa,CACX,cACA,YACA,WACA,UAEF,YAAe,CACb,WACA,eACA,YACA,YACA,mBACA,aACA,WACA,eACA,aACA,iBACA,WACA,YACA,UACA,cACA,aACA,cACA,gBACA,aACA,UACA,aACA,mBACA,YACA,YACA,UACA,cACA,aACA,gBACA,SACA,aACA,cAEF,SAAY,CACV,WACA,SACA,SACA,UACA,UACA,UAEF,SAAY,CACV,kBACA,mBACA,YACA,MACA,eACA,eACA,UACA,eACA,eACA,YACA,uBACA,kBACA,gBACA,iBACA,kBACA,iBACA,WACA,cACA,kBACA,cACA,aACA,sBACA,MACA,YACA,kBACA,YACA,wBACA,eACA,2BACA,iBACA,YACA,0BC/EG,SAASC,EAAWC,GACvB,OACI,wBAAQC,QAASD,EAAMC,QAASC,KAAQF,EAAME,KAAMC,UAAaH,EAAMI,MAAvE,SACI,mBAAGD,UAAaH,EAAMK,cCJ3B,SAASC,EAAON,GACnB,OACI,oBAAIO,GAAIP,EAAMO,GAAIJ,UAAWH,EAAMI,MAAnC,SACKJ,EAAMQ,QCHZ,SAASC,EAAkBT,GAC9B,OACI,mBAAGO,GAAIP,EAAMO,GAAIJ,UAAWH,EAAMI,MAAlC,SAA0CJ,EAAMQ,QCAjD,SAASE,EAAaV,GACzB,OACI,sBAAKG,UAAY,mBAAmBI,GAAG,qBAAvC,UACI,6BAAKP,EAAMW,aACX,cAACL,EAAD,CAAQC,GAAG,gBAAgBC,MAAOR,EAAMY,YACxC,cAACH,EAAD,CAAmBF,GAAG,gBAAgBC,MAAOR,EAAMa,mB,oBCD/D,SAASC,EAAeC,GAEpB,OAAOA,EAAKC,QAAQ,OAAQ,OCTzB,SAASC,IACZ,IAAMC,EDGC,CAAEC,cAPaC,uBAAY,SAACC,GAAgE,IAAlCC,EAAiC,uDAAhB,WACxEJ,EAAUK,IAAQC,cAAcH,GAGtC,OAFAH,EAAQO,aAAaF,IAAQG,kBAEtBZ,EAAeI,EAAQS,QAAQL,MACvC,KCFwB,EAEKM,mBAASV,EAAQC,cAAcrB,IAAxD+B,EAFoB,sBAGKD,mBAASV,EAAQC,cAActB,IAHpC,mBAGpBiC,EAHoB,KAGVC,EAHU,KAK3B,OACI,gCACI,cAACrB,EAAD,CACIC,WAAgB,cAChBC,UAAkBiB,EAClBhB,cAAkBiB,IACtB,qBAAK3B,UAAY,SAAjB,SACI,cAACJ,EAAD,CACIE,QAAc,kBAAM8B,EAAYb,EAAQC,cAActB,KACtDK,KAAY,SACZE,MAAY,kBACZC,UAAY,8BCbjB2B,MANf,WACE,OACE,cAACf,EAAD,KCQWgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.e5762933.chunk.js","sourcesContent":["export const buzzword_grammar = {\r\n  \"origin\": \"#sentence#\",\r\n  \"sentence\" : [\r\n    \"Our #buzzjective# #buzznoun# #buzzverb.s# #buzzjective#, #buzzjective# #buzznoun.s#.\",\r\n    \"It's critical that we use #buzzjective# #buzznoun.s# in order to #buzzverb# the types of #buzznoun.s# our customers #buzzverb#.\",\r\n    \"We aim to #buzzverb# our #buzznoun.s# by #buzzdverb# #buzzverb#ing our #buzznoun.s#.\",\r\n      \"Engagement of our #buzznoun.s# results in #buzzverb#ing our client's #buzznoun.s#.\"\r\n  ],\r\n  \"suffix\": [\r\n    \"\",\r\n    \"ing\",\r\n    \"ed\"\r\n  ],\r\n  \"buzzdverb\": [\r\n    \"dynamically\",\r\n    \"ethically\",\r\n    \"reliably\",\r\n    \"deeply\"\r\n  ],\r\n  \"buzzjective\": [\r\n    \"seamless\",\r\n    \"unparalleled\",\r\n    \"immersive\",\r\n    \"proactive\",\r\n    \"mission critical\",\r\n    \"innovative\",\r\n    \"scalable\",\r\n    \"personalized\",\r\n    \"integrated\",\r\n    \"cross-platform\",\r\n    \"targeted\",\r\n    \"segmented\",\r\n    \"optimal\",\r\n    \"sustainable\",\r\n    \"streamline\",\r\n    \"omnichannel\",\r\n    \"bleeding edge\",\r\n    \"predictive\",\r\n    \"modular\",\r\n    \"end-to-end\",\r\n    \"enterprise-level\",\r\n    \"real-time\",\r\n    \"on-demand\",\r\n    \"restful\",\r\n    \"distributed\",\r\n    \"functional\",\r\n    \"best-in-class\",\r\n    \"legacy\",\r\n    \"non-linear\",\r\n    \"concurrent\"\r\n  ],\r\n  \"buzzverb\": [\r\n    \"engineer\",\r\n    \"reuse\",\r\n    \"adopt\",\r\n    \"enable\",\r\n    \"engage\",\r\n    \"drive\",\r\n    \"execute\",\r\n    \"enhance\",\r\n    \"spin-up\",\r\n    \"touch-base\",\r\n    \"datafy\",\r\n    \"expect\"\r\n  ],\r\n  \"buzznoun\": [\r\n    \"crypto-currency\",\r\n    \"machine-learning\",\r\n    \"bloatware\",\r\n    \"KPI\",\r\n    \"transparency\",\r\n    \"microservice\",\r\n    \"Web 2.0\",\r\n    \"web assembly\",\r\n    \"data science\",\r\n    \"analytics\",\r\n    \"return on investment\",\r\n    \"industry leader\",\r\n    \"best practice\",\r\n    \"agile workflow\",\r\n    \"user experience\",\r\n    \"organic growth\",\r\n    \"big data\",\r\n    \"team player\",\r\n    \"emerging market\",\r\n    \"scalability\",\r\n    \"core asset\",\r\n    \"front-end developer\",\r\n    \"API\",\r\n    \"framework\",\r\n    \"cloud computing\",\r\n    \"millenial\",\r\n    \"responsive web design\",\r\n    \"architecture\",\r\n    \"information super-highway\",\r\n    \"world wide web\",\r\n    \"hyperlink\",\r\n    \"development lifecycle\"\r\n  ],\r\n    \"buzznoun-plural\": [\r\n        \"crypto-currencies\",\r\n        \"machine-learnings\",\r\n        \"bloatwares\",\r\n        \"KPIs\",\r\n        \"transparencies\",\r\n        \"microservices\",\r\n        \"Web 2.0s\",\r\n        \"web assemblies\",\r\n        \"data sciences\",\r\n        \"analytics\",\r\n        \"return on investments\",\r\n        \"industry leaders\",\r\n        \"best practices\",\r\n        \"agile workflows\",\r\n        \"user experiences\",\r\n        \"organic growths\",\r\n        \"big datas\",\r\n        \"team players\",\r\n        \"emerging markets\",\r\n        \"scalabilities\",\r\n        \"core assets\",\r\n        \"front-end developers\",\r\n        \"APIs\",\r\n        \"frameworks\",\r\n        \"cloud computings\",\r\n        \"millenials\",\r\n        \"responsive web designs\",\r\n        \"architectures\",\r\n        \"information super-highways\",\r\n        \"world wide webs\",\r\n        \"hyperlinks\",\r\n        \"development lifecycles\"\r\n    ]\r\n\r\n};\r\n","export const header_grammar = {\r\n  \"origin\": \"#sentence#\",\r\n  \"sentence\" : [\r\n    \"#buzzverb.capitalize#ing your #buzznoun.s# so you don't have to.\"\r\n  ],\r\n  \"suffix\": [\r\n    \"\",\r\n    \"ing\",\r\n    \"ed\"\r\n  ],\r\n  \"buzzdverb\": [\r\n    \"dynamically\",\r\n    \"ethically\",\r\n    \"reliably\",\r\n    \"deeply\"\r\n  ],\r\n  \"buzzjective\": [\r\n    \"seamless\",\r\n    \"unparalleled\",\r\n    \"immersive\",\r\n    \"proactive\",\r\n    \"mission critical\",\r\n    \"innovative\",\r\n    \"scalable\",\r\n    \"personalized\",\r\n    \"integrated\",\r\n    \"cross-platform\",\r\n    \"targeted\",\r\n    \"segmented\",\r\n    \"optimal\",\r\n    \"sustainable\",\r\n    \"streamline\",\r\n    \"omnichannel\",\r\n    \"bleeding edge\",\r\n    \"predictive\",\r\n    \"modular\",\r\n    \"end-to-end\",\r\n    \"enterprise-level\",\r\n    \"real-time\",\r\n    \"on-demand\",\r\n    \"restful\",\r\n    \"distributed\",\r\n    \"functional\",\r\n    \"best-in-class\",\r\n    \"legacy\",\r\n    \"non-linear\",\r\n    \"concurrent\"\r\n  ],\r\n  \"buzzverb\": [\r\n    \"engineer\",\r\n    \"enable\",\r\n    \"engage\",\r\n    \"execute\",\r\n    \"enhance\",\r\n    \"datafy\"\r\n  ],\r\n  \"buzznoun\": [\r\n    \"crypto-currency\",\r\n    \"machine-learning\",\r\n    \"bloatware\",\r\n    \"KPI\",\r\n    \"transparency\",\r\n    \"microservice\",\r\n    \"Web 2.0\",\r\n    \"web assembly\",\r\n    \"data science\",\r\n    \"analytics\",\r\n    \"return on investment\",\r\n    \"industry leader\",\r\n    \"best practice\",\r\n    \"agile workflow\",\r\n    \"user experience\",\r\n    \"organic growth\",\r\n    \"big data\",\r\n    \"team player\",\r\n    \"emerging market\",\r\n    \"scalability\",\r\n    \"core asset\",\r\n    \"front-end developer\",\r\n    \"API\",\r\n    \"framework\",\r\n    \"cloud computing\",\r\n    \"millenial\",\r\n    \"responsive web design\",\r\n    \"architecture\",\r\n    \"information superhighway\",\r\n    \"world wide web\",\r\n    \"hyperlink\",\r\n    \"development lifecycle\"\r\n  ]\r\n};\r\n","import React from \"react\";\r\n\r\ninterface IconButtonProps {\r\n    onClick:   (e: React.MouseEvent) => void;\r\n    type:      \"button\" | \"submit\" | \"reset\";\r\n    class?:    string;\r\n    iconClass: string;\r\n}\r\n\r\nexport function IconButton(props: IconButtonProps) {\r\n    return (\r\n        <button onClick={props.onClick} type = {props.type} className = {props.class}>\r\n            <i className = {props.iconClass}/>\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\ninterface HeaderProps {\r\n    value:  string;\r\n    id:     string;\r\n    class?: string;\r\n}\r\n\r\nexport function Header(props: HeaderProps) {\r\n    return (\r\n        <h2 id={props.id} className={props.class}>\r\n            {props.value}\r\n        </h2>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\ninterface BuzzwordParagraphProps {\r\n    value:  string;\r\n    id:     string;\r\n    class?: string;\r\n}\r\n\r\nexport function BuzzwordParagraph(props: BuzzwordParagraphProps) {\r\n    return (\r\n        <p id={props.id} className={props.class}>{props.value}</p>\r\n    )\r\n}\r\n","import { Header }            from \"../atoms/header/Header\";\r\nimport { BuzzwordParagraph } from \"../atoms/paragraph/BuzzwordParagraph\";\r\nimport React                 from \"react\";\r\n\r\ninterface BuzzwordHeroProps {\r\n    headerText:    string;\r\n    introText:     string;\r\n    paragraphText: string;\r\n}\r\n\r\nexport function BuzzwordHero(props: BuzzwordHeroProps) {\r\n    return (\r\n        <div className = \"center jumbotron\" id=\"buzzword_container\">\r\n            <h1>{props.headerText}</h1>\r\n            <Header id=\"header-phrase\" value={props.introText}/>\r\n            <BuzzwordParagraph id=\"buzzword-main\" value={props.paragraphText} />\r\n        </div>\r\n    );\r\n}\r\n","import tracery         from \"tracery-grammar\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport function useGrammar() {\r\n    const getNewGrammar = useCallback((grammarConfiguration: object, origin: string = \"#origin#\") =>  {\r\n        const grammar = tracery.createGrammar(grammarConfiguration);\r\n        grammar.addModifiers(tracery.baseEngModifiers);\r\n\r\n        return fixINGModifier(grammar.flatten(origin));\r\n    }, []);\r\n\r\n    return { getNewGrammar };\r\n}\r\n\r\nfunction fixINGModifier(text: string)\r\n{\r\n    return text.replace(\"eing\", \"ing\");\r\n}\r\n","import React, { useState }  from \"react\";\r\nimport { buzzword_grammar } from \"../core/buzzword_grammar\";\r\nimport { header_grammar }   from \"../core/header_grammar\";\r\nimport { IconButton }       from \"../atoms/button/IconButton\";\r\nimport { BuzzwordHero }     from \"../molecules/BuzzwordHero\";\r\nimport { useGrammar }       from \"../core/hooks/grammar/GrammarHooks\";\r\n\r\nexport function BuzzwordPage() {\r\n    const grammar                 = useGrammar();\r\n    const [header]                = useState(grammar.getNewGrammar(header_grammar));\r\n    const [buzzword, setBuzzword] = useState(grammar.getNewGrammar(buzzword_grammar));\r\n\r\n    return (\r\n        <div>\r\n            <BuzzwordHero\r\n                headerText    = \"BUZZWORD.IO\"\r\n                introText     = { header }\r\n                paragraphText = { buzzword } />\r\n            <div className = \"center\">\r\n                <IconButton\r\n                    onClick   = { () => setBuzzword(grammar.getNewGrammar(buzzword_grammar)) }\r\n                    type      = \"button\"\r\n                    class     = \"btn btn-primary\"\r\n                    iconClass = \"icon-refresh icon-4x\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BuzzwordPage } from \"./pages/Buzzword-Page\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BuzzwordPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}